{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/react-study/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, Fragment, useCallback, useEffect, useMemo, useReducer, useRef } from 'react';\nimport './App.css';\nimport DiaryEditor from './components/diaryEditor';\nimport DiaryList from './components/diaryList'; // https://jsonplaceholder.typicode.com/comments\n//  fetch('https://jsonplaceholder.typicode.com/todos/1')\n// .then(response => response.json())\n// .then(json => console.log(json))\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT':\n      {\n        return action.data;\n      }\n\n    case 'CREATE':\n      {\n        const created_date = new Date().getTime();\n        const newItem = { ...action.data,\n          created_date\n        };\n        return [newItem, ...state];\n      }\n\n    case 'REMOVE':\n      {\n        return state.filter(item => item.id !== action.targetId);\n      }\n\n    case 'EDIT':\n      {\n        return state.map(item => item.id === action.targetId ? { ...item,\n          content: action.newContent\n        } : item);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const DiaryStateContext = /*#__PURE__*/createContext();\n\nconst App = () => {\n  _s();\n\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json());\n    console.log(res); //data를 0~19까지 20개 가져온다.\n\n    const initData = res.slice(0, 20).map(item => {\n      return {\n        author: item.email,\n        content: item.body,\n        emotion: '😆',\n        // emotion: Math.floor(Math.random()*5)+1\n        // Math.floor 소수점 이하 버림\n        // Math.random()*5 0~4까지 랜덤 숫자 발생\n        // (Math.random()*5)+1 1~5까지 랜덤 숫자 발생\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    dispatch({\n      type: 'INIT',\n      data: initData\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: 'CREATE',\n      data: {\n        author,\n        content,\n        emotion,\n        id: dataId.current\n      }\n    });\n    dataId.current += 1;\n  }, []);\n  const onRemove = useCallback(targetId => {\n    dispatch({\n      type: 'REMOVE',\n      targetId\n    });\n  }, []);\n  const onEdit = useCallback((targetId, newContent) => {\n    dispatch({\n      type: 'EDIT',\n      targetId,\n      newContent\n    });\n  }, []); //useMemo()\n  //emotion을 emoji 문자열 타입으로 넣어서 아래 getDiaryAnalysis 함수는 제대로 작동하지 않는다.\n\n  const getDiaryAnalysis = useMemo(() => {\n    if (data.length === 0) {\n      return {\n        goodcount: 0,\n        badCount: 0,\n        goodRatio: 0\n      };\n    }\n\n    console.log('일기 분석 시작');\n    const goodCount = data.filter(it => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100.0;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  }, [data.length]); //useMemo를 사용하게 되면 getDiaryAnalysis는 함수가 아니라 값을 반환하게 된다.\n  //따라서 getDiaryAnalysis()로 호출하면 function이 아니라는 에러가 발생한다.\n\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis;\n  return /*#__PURE__*/_jsxDEV(DiaryStateContext.Provider, {\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC804\\uCCB4 \\uC77C\\uAE30: \", data.length, \" \\uAC1C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uB0A0: \", goodCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uB098\\uC05C \\uB0A0: \", badCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uB0A0 \\uBE44\\uC728: \", goodRatio]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      diaryList: data,\n      onRemove: onRemove,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"F0Fyqg4AmrFvw2PizzKMxEoq+hM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/skylar/study/React/react-study/src/App.js"],"names":["createContext","Fragment","useCallback","useEffect","useMemo","useReducer","useRef","DiaryEditor","DiaryList","reducer","state","action","type","data","created_date","Date","getTime","newItem","filter","item","id","targetId","map","content","newContent","DiaryStateContext","App","dispatch","dataId","getData","res","fetch","then","json","console","log","initData","slice","author","email","body","emotion","current","onCreate","onRemove","onEdit","getDiaryAnalysis","length","goodcount","badCount","goodRatio","goodCount","it"],"mappings":"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","sourcesContent":["import { createContext, Fragment, useCallback, useEffect, useMemo, useReducer, useRef } from 'react'\nimport './App.css'\nimport DiaryEditor from './components/diaryEditor'\nimport DiaryList from './components/diaryList'\n\n// https://jsonplaceholder.typicode.com/comments\n\n//  fetch('https://jsonplaceholder.typicode.com/todos/1')\n// .then(response => response.json())\n// .then(json => console.log(json))\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT': {\n      return action.data\n    }\n\n    case 'CREATE': {\n      const created_date = new Date().getTime()\n      const newItem = {\n        ...action.data,\n        created_date,\n      }\n      return [newItem, ...state]\n    }\n    case 'REMOVE': {\n      return state.filter((item) => item.id !== action.targetId)\n    }\n    case 'EDIT': {\n      return state.map((item) => (item.id === action.targetId ? { ...item, content: action.newContent } : item))\n    }\n    default:\n      return state\n  }\n}\n\nexport const DiaryStateContext = createContext()\n\nconst App = () => {\n  const [data, dispatch] = useReducer(reducer, [])\n\n  const dataId = useRef(0)\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then((res) => res.json())\n    console.log(res)\n\n    //data를 0~19까지 20개 가져온다.\n    const initData = res.slice(0, 20).map((item) => {\n      return {\n        author: item.email,\n        content: item.body,\n        emotion: '😆',\n        // emotion: Math.floor(Math.random()*5)+1\n        // Math.floor 소수점 이하 버림\n        // Math.random()*5 0~4까지 랜덤 숫자 발생\n        // (Math.random()*5)+1 1~5까지 랜덤 숫자 발생\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      }\n    })\n    dispatch({ type: 'INIT', data: initData })\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: 'CREATE',\n      data: {\n        author,\n        content,\n        emotion,\n        id: dataId.current,\n      },\n    })\n\n    dataId.current += 1\n  }, [])\n\n  const onRemove = useCallback((targetId) => {\n    dispatch({ type: 'REMOVE', targetId })\n  }, [])\n\n  const onEdit = useCallback((targetId, newContent) => {\n    dispatch({\n      type: 'EDIT',\n      targetId,\n      newContent,\n    })\n  }, [])\n\n  //useMemo()\n  //emotion을 emoji 문자열 타입으로 넣어서 아래 getDiaryAnalysis 함수는 제대로 작동하지 않는다.\n  const getDiaryAnalysis = useMemo(() => {\n    if (data.length === 0) {\n      return { goodcount: 0, badCount: 0, goodRatio: 0 }\n    }\n    console.log('일기 분석 시작')\n\n    const goodCount = data.filter((it) => it.emotion >= 3).length\n    const badCount = data.length - goodCount\n    const goodRatio = (goodCount / data.length) * 100.0\n    return { goodCount, badCount, goodRatio }\n  }, [data.length])\n\n  //useMemo를 사용하게 되면 getDiaryAnalysis는 함수가 아니라 값을 반환하게 된다.\n  //따라서 getDiaryAnalysis()로 호출하면 function이 아니라는 에러가 발생한다.\n  const { goodCount, badCount, goodRatio } = getDiaryAnalysis\n\n  return (\n    <DiaryStateContext.Provider>\n      <DiaryEditor onCreate={onCreate} />\n      <div>전체 일기: {data.length} 개</div>\n      <div>기분 좋은 날: {goodCount}</div>\n      <div>기분 나쁜 날: {badCount}</div>\n      <div>기분 좋은 날 비율: {goodRatio}</div>\n      <DiaryList diaryList={data} onRemove={onRemove} onEdit={onEdit} />\n    </DiaryStateContext.Provider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}