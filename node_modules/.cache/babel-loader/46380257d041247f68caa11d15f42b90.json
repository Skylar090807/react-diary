{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/react-study/src/components/Lifecycle.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UnmountTest = () => {\n  _s();\n\n  useEffect(() => {\n    console.log('Mount!');\n    return () => {\n      //Unmount 시점에 실행된다.\n      console.log('Unmount!');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Unmount Testing Component\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UnmountTest, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UnmountTest;\n\nconst Lifecycle = () => {\n  _s2();\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggle = () => {\n    setIsVisible(!isVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: \"On/Off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(UnmountTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Lifecycle, \"QjDZesRvLCmcrZLxgN677nXnVLA=\");\n\n_c2 = Lifecycle;\nexport default Lifecycle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UnmountTest\");\n$RefreshReg$(_c2, \"Lifecycle\");","map":{"version":3,"sources":["/Users/skylar/study/React/react-study/src/components/Lifecycle.js"],"names":["React","useEffect","useState","UnmountTest","console","log","Lifecycle","isVisible","setIsVisible","toggle","padding"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxBF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,WAAO,MAAM;AACX;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAHD;AAID,GAPQ,EAON,EAPM,CAAT;AASA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;GAAMF,W;;KAAAA,W;;AAaN,MAAMG,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMO,MAAM,GAAG,MAAM;AACnBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAED,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGF,SAAS,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAfD;;IAAMD,S;;MAAAA,S;AAiBN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst UnmountTest = () => {\n  useEffect(() => {\n    console.log('Mount!')\n\n    return () => {\n      //Unmount 시점에 실행된다.\n      console.log('Unmount!')\n    }\n  }, [])\n\n  return <div>Unmount Testing Component</div>\n}\n\nconst Lifecycle = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  const toggle = () => {\n    setIsVisible(!isVisible)\n  }\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <button onClick={toggle}>On/Off</button>\n\n      {/* 단락회로 평가로 isVisible이 true이면 <UnmountTest />가 mount되어 렌더되고, flase이면 unmount로 렌더되지 않는다. */}\n      {isVisible && <UnmountTest />}\n    </div>\n  )\n}\n\nexport default Lifecycle\n"]},"metadata":{},"sourceType":"module"}