{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/react-study/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useCallback, useEffect, useMemo, useReducer, useRef } from 'react';\nimport './App.css';\nimport DiaryEditor from './components/diaryEditor';\nimport DiaryList from './components/diaryList'; // https://jsonplaceholder.typicode.com/comments\n//  fetch('https://jsonplaceholder.typicode.com/todos/1')\n// .then(response => response.json())\n// .then(json => console.log(json))\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT':\n      {\n        return action.data;\n      }\n\n    case 'CREATE':\n      {\n        const created_date = new Date().getTime();\n        const newItem = { ...action.data,\n          created_date\n        };\n        return [newItem, ...state];\n      }\n\n    case 'REMOVE':\n      {\n        return state.filter(item => item.id !== action.targetId);\n      }\n\n    case 'EDIT':\n      {\n        return state.map(item => item.id === action.targetId ? { ...item,\n          content: action.newContent\n        } : item);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const DiaryStateContext = /*#__PURE__*/createContext();\nexport const DiaryDispatchContext = /*#__PURE__*/createContext();\n\nconst App = () => {\n  _s();\n\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json());\n    console.log(res); //dataÎ•º 0~19ÍπåÏßÄ 20Í∞ú Í∞ÄÏ†∏Ïò®Îã§.\n\n    const initData = res.slice(0, 20).map(item => {\n      return {\n        author: item.email,\n        content: item.body,\n        emotion: 'üòÜ',\n        // emotion: Math.floor(Math.random()*5)+1\n        // Math.floor ÏÜåÏàòÏ†ê Ïù¥Ìïò Î≤ÑÎ¶º\n        // Math.random()*5 0~4ÍπåÏßÄ ÎûúÎç§ Ïà´Ïûê Î∞úÏÉù\n        // (Math.random()*5)+1 1~5ÍπåÏßÄ ÎûúÎç§ Ïà´Ïûê Î∞úÏÉù\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    dispatch({\n      type: 'INIT',\n      data: initData\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: 'CREATE',\n      data: {\n        author,\n        content,\n        emotion,\n        id: dataId.current\n      }\n    });\n    dataId.current += 1;\n  }, []);\n  const onRemove = useCallback(targetId => {\n    dispatch({\n      type: 'REMOVE',\n      targetId\n    });\n  }, []);\n  const onEdit = useCallback((targetId, newContent) => {\n    dispatch({\n      type: 'EDIT',\n      targetId,\n      newContent\n    });\n  }, []);\n  const memoizedDispatches = useMemo(() => {\n    return {\n      onCreate,\n      onRemove,\n      onEdit\n    };\n  }, []); //useMemo()\n  //emotionÏùÑ emoji Î¨∏ÏûêÏó¥ ÌÉÄÏûÖÏúºÎ°ú ÎÑ£Ïñ¥ÏÑú ÏïÑÎûò getDiaryAnalysis Ìï®ÏàòÎäî Ï†úÎåÄÎ°ú ÏûëÎèôÌïòÏßÄ ÏïäÎäîÎã§.\n\n  const getDiaryAnalysis = useMemo(() => {\n    if (data.length === 0) {\n      return {\n        goodcount: 0,\n        badCount: 0,\n        goodRatio: 0\n      };\n    }\n\n    console.log('ÏùºÍ∏∞ Î∂ÑÏÑù ÏãúÏûë');\n    const goodCount = data.filter(it => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100.0;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  }, [data.length]); //useMemoÎ•º ÏÇ¨Ïö©ÌïòÍ≤å ÎêòÎ©¥ getDiaryAnalysisÎäî Ìï®ÏàòÍ∞Ä ÏïÑÎãàÎùº Í∞íÏùÑ Î∞òÌôòÌïòÍ≤å ÎêúÎã§.\n  //Îî∞ÎùºÏÑú getDiaryAnalysis()Î°ú Ìò∏Ï∂úÌïòÎ©¥ functionÏù¥ ÏïÑÎãàÎùºÎäî ÏóêÎü¨Í∞Ä Î∞úÏÉùÌïúÎã§.\n\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis;\n  return /*#__PURE__*/_jsxDEV(DiaryStateContext.Provider, {\n    value: data,\n    children: /*#__PURE__*/_jsxDEV(DiaryDispatchContext.Provider, {\n      value: memoizedDispatches,\n      children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n        onCreate: onCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC804\\uCCB4 \\uC77C\\uAE30: \", data.length, \" \\uAC1C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uB0A0: \", goodCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uAE30\\uBD84 \\uB098\\uC05C \\uB0A0: \", badCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uB0A0 \\uBE44\\uC728: \", goodRatio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n        onRemove: onRemove,\n        onEdit: onEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2FswuqedLy8DIU7Ir+zqwO+E85A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/skylar/study/React/react-study/src/App.js"],"names":["createContext","useCallback","useEffect","useMemo","useReducer","useRef","DiaryEditor","DiaryList","reducer","state","action","type","data","created_date","Date","getTime","newItem","filter","item","id","targetId","map","content","newContent","DiaryStateContext","DiaryDispatchContext","App","dispatch","dataId","getData","res","fetch","then","json","console","log","initData","slice","author","email","body","emotion","current","onCreate","onRemove","onEdit","memoizedDispatches","getDiaryAnalysis","length","goodcount","badCount","goodRatio","goodCount","it"],"mappings":"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","sourcesContent":["import { createContext, useCallback, useEffect, useMemo, useReducer, useRef } from 'react'\nimport './App.css'\nimport DiaryEditor from './components/diaryEditor'\nimport DiaryList from './components/diaryList'\n\n// https://jsonplaceholder.typicode.com/comments\n\n//  fetch('https://jsonplaceholder.typicode.com/todos/1')\n// .then(response => response.json())\n// .then(json => console.log(json))\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT': {\n      return action.data\n    }\n\n    case 'CREATE': {\n      const created_date = new Date().getTime()\n      const newItem = {\n        ...action.data,\n        created_date,\n      }\n      return [newItem, ...state]\n    }\n    case 'REMOVE': {\n      return state.filter((item) => item.id !== action.targetId)\n    }\n    case 'EDIT': {\n      return state.map((item) => (item.id === action.targetId ? { ...item, content: action.newContent } : item))\n    }\n    default:\n      return state\n  }\n}\n\nexport const DiaryStateContext = createContext()\nexport const DiaryDispatchContext = createContext()\n\nconst App = () => {\n  const [data, dispatch] = useReducer(reducer, [])\n\n  const dataId = useRef(0)\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then((res) => res.json())\n    console.log(res)\n\n    //dataÎ•º 0~19ÍπåÏßÄ 20Í∞ú Í∞ÄÏ†∏Ïò®Îã§.\n    const initData = res.slice(0, 20).map((item) => {\n      return {\n        author: item.email,\n        content: item.body,\n        emotion: 'üòÜ',\n        // emotion: Math.floor(Math.random()*5)+1\n        // Math.floor ÏÜåÏàòÏ†ê Ïù¥Ìïò Î≤ÑÎ¶º\n        // Math.random()*5 0~4ÍπåÏßÄ ÎûúÎç§ Ïà´Ïûê Î∞úÏÉù\n        // (Math.random()*5)+1 1~5ÍπåÏßÄ ÎûúÎç§ Ïà´Ïûê Î∞úÏÉù\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      }\n    })\n    dispatch({ type: 'INIT', data: initData })\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: 'CREATE',\n      data: {\n        author,\n        content,\n        emotion,\n        id: dataId.current,\n      },\n    })\n\n    dataId.current += 1\n  }, [])\n\n  const onRemove = useCallback((targetId) => {\n    dispatch({ type: 'REMOVE', targetId })\n  }, [])\n\n  const onEdit = useCallback((targetId, newContent) => {\n    dispatch({\n      type: 'EDIT',\n      targetId,\n      newContent,\n    })\n  }, [])\n\n  const memoizedDispatches = useMemo(() => {\n    return { onCreate, onRemove, onEdit }\n  }, [])\n\n  //useMemo()\n  //emotionÏùÑ emoji Î¨∏ÏûêÏó¥ ÌÉÄÏûÖÏúºÎ°ú ÎÑ£Ïñ¥ÏÑú ÏïÑÎûò getDiaryAnalysis Ìï®ÏàòÎäî Ï†úÎåÄÎ°ú ÏûëÎèôÌïòÏßÄ ÏïäÎäîÎã§.\n  const getDiaryAnalysis = useMemo(() => {\n    if (data.length === 0) {\n      return { goodcount: 0, badCount: 0, goodRatio: 0 }\n    }\n    console.log('ÏùºÍ∏∞ Î∂ÑÏÑù ÏãúÏûë')\n\n    const goodCount = data.filter((it) => it.emotion >= 3).length\n    const badCount = data.length - goodCount\n    const goodRatio = (goodCount / data.length) * 100.0\n    return { goodCount, badCount, goodRatio }\n  }, [data.length])\n\n  //useMemoÎ•º ÏÇ¨Ïö©ÌïòÍ≤å ÎêòÎ©¥ getDiaryAnalysisÎäî Ìï®ÏàòÍ∞Ä ÏïÑÎãàÎùº Í∞íÏùÑ Î∞òÌôòÌïòÍ≤å ÎêúÎã§.\n  //Îî∞ÎùºÏÑú getDiaryAnalysis()Î°ú Ìò∏Ï∂úÌïòÎ©¥ functionÏù¥ ÏïÑÎãàÎùºÎäî ÏóêÎü¨Í∞Ä Î∞úÏÉùÌïúÎã§.\n  const { goodCount, badCount, goodRatio } = getDiaryAnalysis\n\n  return (\n    <DiaryStateContext.Provider value={data}>\n      <DiaryDispatchContext.Provider value={memoizedDispatches}>\n        <DiaryEditor onCreate={onCreate} />\n        <div>Ï†ÑÏ≤¥ ÏùºÍ∏∞: {data.length} Í∞ú</div>\n        <div>Í∏∞Î∂Ñ Ï¢ãÏùÄ ÎÇ†: {goodCount}</div>\n        <div>Í∏∞Î∂Ñ ÎÇòÏÅú ÎÇ†: {badCount}</div>\n        <div>Í∏∞Î∂Ñ Ï¢ãÏùÄ ÎÇ† ÎπÑÏú®: {goodRatio}</div>\n        <DiaryList onRemove={onRemove} onEdit={onEdit} />\n      </DiaryDispatchContext.Provider>\n    </DiaryStateContext.Provider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}